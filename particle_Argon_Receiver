// Array to store the current sensor values received
int sensorValues[5] = {0};

// Array to store the previous sensor values
int prevValues[5] = {0};

// Responses for each sensor
String responses[5] = {
    "Sensor 1 Response",
    "Sensor 2 Response",
    "Sensor 3 Response",
    "Sensor 4 Response",
    "Sensor 5 Response"
};

void setup() {
    // Initialize the serial monitor
    Serial.begin(9600);

    // Print a startup message
    Serial.println("Waiting for sensor data...");

    // Subscribe to the published data
    Particle.subscribe("flexSensorData", handleSensorData, MY_DEVICES);
}

void loop() {
    // The loop remains empty because data is processed in the subscription callback
}

// Function to handle and process received sensor data
void handleSensorData(const char *event, const char *data) {
    // Parse the received string and convert it to integer values
    sscanf(data, "%d,%d,%d,%d,%d", &sensorValues[0], &sensorValues[1], &sensorValues[2], &sensorValues[3], &sensorValues[4]);

    // Check the difference and print the response if the threshold is exceeded
    for (int i = 0; i < 5; i++) {
        if (abs(sensorValues[i] - prevValues[i]) > 100) {
            Serial.print("Sensor ");
            Serial.print(i + 1);
            Serial.print(": ");
            Serial.println(responses[i]);

            // Update the previous value
            prevValues[i] = sensorValues[i];
        }
    }

    // Add a line break for clarity
    Serial.println("---------------------");
}
